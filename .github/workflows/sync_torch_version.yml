name: Github sync version manager

on:
  schedule:
    - cron: "* */6 * * *"
  workflow_dispatch:
  push:

env:
  VERSIONS_JSON: "${{ fromJSON(vars.VERSIONS) }}"

jobs:
  sync-variables:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Env file creation
        run: |
          echo "Number of version variables: ${#VERSIONS_JSON}"
            for i in "${SECRET_ARRAY[@]}"; do
          echo "$i"

          echo "# This file is auto generated by the github sync version manager workflow" > /tmp/env.tmp
          echo "# Do not modify it directly, use the configuration variables instead." >> /tmp/env.tmp

          #for val in ${{ join(matrix.array, ' ') }}; do
          echo "${{ matrix.array }}" >> /tmp/env.tmp
          #done
          cat /tmp/env.tmp


      - name: variable has change
        run: |
          if [[ "${{vars.LIBTORCH_VERSION}}" != "${{github.event.changes.LIBTORCH_VERSION}}" ]]; then
            echo "VAR HAS CHANGED"
          else
            echo "var has not changed" ${{vars.LIBTORCH_VERSION}} ${{github.event.changes.LIBTORCH_VERSION}}
          fi



      - name: Update env file
        run: |
          echo 'print(*[f"{v}={globals()[v]}" for v in __all__], sep="\n")' |
            python3 -i client/src/bastionlab/version.py > client/src/bastionlab/.env.version

      - name: Commit and push env file
        uses: devops-infra/action-commit-push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: Update .env.version with version.py

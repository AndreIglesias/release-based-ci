name: Github sync version manager

on:
  workflow_dispatch:
  push:
  schedule:
    - cron: "* */6 * * *"

env:
  VERSIONS_JSON: ${{ vars.VERSIONS }}
  WARNING_HEADER: >
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
    # This file is auto generated by the github sync version manager workflow     #
    # Do not modify it directly, use the github configuration variables instead.  #
    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

jobs:
  sync-variables:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Versions JSON variable parsing
        run: |
          cat <<EOF > /tmp/versions.json
            ${{ env.VERSIONS_JSON }}
          EOF
          cat /tmp/versions.json
          export VERSIONS_OBJECT=$(cat /tmp/versions.json | jq -c '.')
          echo "Parsed JSON object: $VERSIONS_OBJECT"

      - name: Env file creation
        run: |
          echo "${{ env.WARNING_HEADER }}" > /tmp/env.tmp

          for key in $(echo "${VERSIONS_OBJECT}" | jq -r 'keys[]'); do
            value=$(echo "${VERSIONS_OBJECT}" | jq -r --arg k "$key" '.[$k]')
            echo "${key^^}=${value}"
            echo "${key^^}=${value}" >> /tmp/env.tmp
          done


      - name: verify changes in variables
        run: |
          if [ -f ".env.vars" ]; then
            tmpfile=$(cat /tmp/env.tmp)
            varfile=$(cat .env.vars)
            if [ "$tmpfile" != "$varfile" ]; then
              mv /tmp/env.tmp .env.vars
            fi
          else
            mv /tmp/env.tmp .env.vars
          fi

      - name: Update env file
        run: |
          echo 'print(*[f"{v}={globals()[v]}" for v in __all__], sep="\n")' |
            python3 -i client/src/bastionlab/version.py > client/src/bastionlab/.env.version

      - name: Commit and push env file
        uses: devops-infra/action-commit-push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: Update .env.version with version.py
